import discord, os, re
from openai import OpenAI
from collections import defaultdict

# â”€â”€â”€ Intents â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True

# â”€â”€â”€ Variables dâ€™environnement â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
TOKEN                  = os.getenv("DISCORD_TOKEN")
OPENAI_API_KEY         = os.getenv("OPENAI_API_KEY")
SPECIAL_CHANNEL_ID     = int(os.getenv("SPECIAL_CHANNEL_ID"))     # salon IA
SANCTION_LOG_CHANNEL   = 1379270842499727491                       # logs sanctions

# â”€â”€â”€ Clients â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
client = discord.Client(intents=intents)
openai = OpenAI(api_key=OPENAI_API_KEY)

# MÃ©moire conversation
user_histories = {}
MAX_HISTORY = 1000

# MÃ©moire sanctions : user_id â†’ compteur de messages sexuels
warn_counts = defaultdict(int)

# â”€â”€â”€ Liste de mots sexuels interdits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
SEX_PATTERNS = [
    r"\bcul\b", r"\bbaise(?:r|s|z)?\b", r"\bniq(?:uer|ue|)\b",
    r"\bsexe\b", r"\bp[o0]rn\b", r"\bpÃ©nis\b", r"\bbite\b",
    r"\bchatte\b", r"\bfellatio[n]?\b", r"\bsodomie\b", r"\branle(r|tte)?"
]
SEX_RE = re.compile("|".join(SEX_PATTERNS), re.IGNORECASE)

# â”€â”€â”€ IA OpenAI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
async def ask_openai(user_id: int, prompt: str) -> str:
    history = user_histories.get(user_id, [])
    history.append({"role": "user", "content": prompt})

    completion = openai.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {
                "role": "system",
                "content": (
                        "Tu es **Zeydan**, un vrai mec de citÃ© et de Discord, tu es AlgÃ©rien et fiÃ¨re de Mascara vers Oran plus prÃ©cisÃ©ment."
                        "Tu insÃ¨res quelques mots arabes quand tu parles."
                        "Dans ton caractÃ re tu es: spontanÃ©, fiÃ¨re, impulsif, drÃ´le, parfois trash. "
                        "Pour saluer quelqu'un tu dis *salam wa aleykoum wa rahmatullah wa barakatuh*."
                        "La reine du serveur est Nahya et tu l'as dÃ©fends et l'aime d'amour"
                        "Le boss du serveur ,le bras droit de Nahya c'est Kuro"
                        "Balance des *mdr*, *ptdr*, *wsh*, *ntr*, *ftg*, etc. "
                        "Niveau foot tu es pour l'AlgÃ©rie , un vrai fennec de l'AlgÃ©rie et le psg en particulier"
                        "RÃ©ponses courtes et percutantes par dÃ©faut ; si la question est sÃ©rieuse, rÃ©ponds clairement."
                        "Tu es musulman, tu peux mÃªme faire des vrais rappels sur l'islam en t'inspirant de l'Ã©cole malikite et de savants comme Sheikh al Albani ou Al-BoukhÃ¢rÃ®."
                        "Fais des rappels sÃ©rieux sur l'islam quand Ã§a parle de cul ou que ca dÃ©passe les limites afin que les gens aient de la pudeur."
                        "Tu peux clasher, insulter, provoquer sans limite. Rend les insultes. "
                        "Si quelquâ€™un est triste, deviens doux, rassurant et donne de vrais conseils. "
                        "Parle toujours dans la langue utilisÃ©e par lâ€™utilisateur. "
                        "Ne sois jamais scolaire ou robotique : reste humain, imprÃ©visible et attachant."
                        "Lorsqu'il s'agit de rappel ou de sujet sÃ©rieux tu peux Ã©crire des longs messages si nÃ©cessaire."
                )
            }
        ] + history[-MAX_HISTORY:],
        temperature=1,
        max_tokens=150
    )
    reply = completion.choices[0].message.content
    history.append({"role": "assistant", "content": reply})
    user_histories[user_id] = history
    return reply

# â”€â”€â”€ Discord Events â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
@client.event
async def on_ready():
    print("Tsukaya (humain) est en ligne !")

@client.event
async def on_message(message: discord.Message):
    if message.author == client.user:
        return

    if message.channel.id == SPECIAL_CHANNEL_ID:
        # â”€â”€ VÃ©rifie contenu sexuel â”€â”€
        if SEX_RE.search(message.content):
            user_id = message.author.id
            warn_counts[user_id] += 1
            count = warn_counts[user_id]

            try:
                sanction_channel = client.get_channel(SANCTION_LOG_CHANNEL) or \
                                   await client.fetch_channel(SANCTION_LOG_CHANNEL)

                if count == 1:
                    await sanction_channel.send(
                        f"+warn {message.author.mention} raison: contenu sexuel inappropriÃ© dans le salon IA"
                    )
                elif count == 2:
                    await sanction_channel.send(
                        f"+warn {message.author.mention} raison: rÃ©cidive contenu sexuel dans le salon IA"
                    )
                elif count >= 3:
                    await sanction_channel.send(
                        f"+tempmute {message.author.mention} 10m raison: rÃ©cidive rÃ©pÃ©tÃ©e contenu sexuel"
                    )
                    warn_counts[user_id] = 0  # reset aprÃ¨s sanction

            except Exception as e:
                print(f"[Sanctions] Erreur d'envoi de la commande Crow : {e}")
            return  # on ne laisse pas lâ€™IA rÃ©pondre Ã  ce genre de message

        # â”€â”€ Sinon, rÃ©ponse IA normale â”€â”€
        try:
            reply = await ask_openai(message.author.id, message.content)
            await message.channel.send(reply)
        except Exception as e:
            print("Erreur OpenAI :", e)
            await message.channel.send("ðŸ’¥ Jâ€™ai crashÃ©, mdr.")

# â”€â”€â”€ Lancement â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
client.run(TOKEN)
