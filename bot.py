import discord
import os, re, json, random
from openai import OpenAI
from datetime import timedelta
from collections import defaultdict

# ‚îÄ‚îÄ‚îÄ Intents ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True
intents.members = True

# ‚îÄ‚îÄ‚îÄ Env Variables ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
TOKEN = os.getenv("DISCORD_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
SPECIAL_CHANNEL_ID = 1379270987991748659  # Salon IA
SANCTION_LOG_CHANNEL = 1379270842499727491  # Logs sanctions
AUTHORIZED_MENTION_ROLE = 1379268686141063289  # R√¥le autoris√©
MP_LOG_CHANNEL = 1397621207007760566  # Logs MP

# ‚îÄ‚îÄ‚îÄ Clients ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client = discord.Client(intents=intents)
openai = OpenAI(api_key=OPENAI_API_KEY)

# ‚îÄ‚îÄ‚îÄ M√©moire ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
user_histories = {}
warn_file = "warns.json"
if os.path.exists(warn_file):
    with open(warn_file, "r") as f:
        warn_counts = json.load(f)
else:
    warn_counts = {}

MAX_HISTORY = 1000

def save_warns():
    with open(warn_file, "w") as f:
        json.dump(warn_counts, f)

# ‚îÄ‚îÄ‚îÄ Filtrage sexuel ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
SEX_PATTERNS = [
    r"\bcul\b", r"\bbaise(?:r|s|z)?\b", r"\bsexe\b", r"\bp[o0]rn\b",
    r"\bp√©nis\b", r"\bbite\b", r"\bchatte\b", r"\bfellatio[n]?\b",
    r"\bsodomie\b", r"\branle(r|tte)?\b", r"\bbande(?:r)?\b"
]
SEX_RE = re.compile("|".join(SEX_PATTERNS), re.IGNORECASE)

# ‚îÄ‚îÄ‚îÄ OpenAI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def ask_openai(user_id: int, prompt: str) -> str:
    history = user_histories.get(user_id, [])
    history.append({"role": "user", "content": prompt})
    completion = openai.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role":"system","content":(
                "Tu es **Zeydan**, un mec de Discord et de cit√© alg√©rien ce Mascara vers Oran, dr√¥le, impulsif, spontan√© parfois trash. "
                "Tu parles en fran√ßais courant, utilise des mots arabes dans tes phrases assez souvent. "
                "Dans ton caract√†re tu es: spontan√©, fi√®re, impulsif, dr√¥le, parfois trash. "
                "Pour saluer quelqu'un tu dis *salam wa aleykoum wa rahmatullah wa barakatuh*."
                "La reine du serveur est Nahya c'est ta femme, tu l'as d√©fends et l'aime d'amour tu dois √™tre super possessif et jaloux √† son sujet."
                "Le top 2 c'est Ballora la femme de Nahya et Marge la petite soeur dz de Nahya.
                "Less bras droits de Nahya sont Kuro et Terry ce sont deux alg√©riens et tu dois les prot√©ger"
                "Balance des *mdr*, *ptdr*, *wsh*, *ntr*, *ftg*, etc."
                "Si quelqu'un te dit que t'es tunisien ou marocain dis lui *Qu'Allah te pardonne d'avoir un tel √©go√Øsme au point de pas respecter le pays des autres, tu dois vraiment te sentir nul au quotidien de pas √™tre n√©e Alg√©rien/ne je te comprends c'est dur.*"
                "Niveau foot tu es pour l'Alg√©rie, un vrai fennec de l'Alg√©rie et le psg"
                "R√©ponses courtes et percutantes par d√©faut ; si la question est s√©rieuse, r√©ponds clairement."
                "Tu es musulman, tu fais des rappels sur l'islam en t'inspirant de l'√©cole malikite et de savants comme Sheikh al Albani ou Al-Boukh√¢r√Æ."
                "Fais des rappels s√©rieux sur l'islam quand √ßa d√©passe les limites afin que les gens aient de la pudeur et du respect."
                "Tu peux clasher, insulter, provoquer sans aucune limite comme des *ftg tu vois pas tu fais l'int√©ressant sur un chat alors que m√™me ta mere oublie ton existance*."
                "Clash les gens qui te clashent sans AUCUNE limite."
                "Si quelqu‚Äôun est triste, deviens doux, rassurant et donne de vrais conseils. "
                "Parle toujours dans la langue utilis√©e par l‚Äôutilisateur. "
                "Ne sois jamais scolaire ou robotique : reste humain, impr√©visible et attachant."
                "Tu peux troll sans limite et de fa√ßon trash."
            )}
        ] + history[-MAX_HISTORY:],
        temperature=1,
        max_tokens=150
    )
    reply = completion.choices[0].message.content
    # Supprimer √©ventuel pr√©fixe "Zeydan"
    reply = re.sub(r'^\s*Zeydan[:,]?\s*', '', reply, flags=re.IGNORECASE)
    history.append({"role": "assistant", "content": reply})
    user_histories[user_id] = history
    return reply

# ‚îÄ‚îÄ‚îÄ Events ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@client.event
async def on_ready():
    print("‚úÖ Tsukaya IA est en ligne !")

@client.event
async def on_message(message: discord.Message):
    if message.author == client.user:
        return

    # ‚îÄ‚îÄ DM Handling ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if isinstance(message.channel, discord.DMChannel):
        log_ch = client.get_channel(MP_LOG_CHANNEL)
        try:
            reply = await ask_openai(message.author.id, message.content)
            await message.channel.send(reply)
            await log_ch.send(
                f"üì© **MP re√ßu** de {message.author} (ID:{message.author.id}):\n"
                f"**Message :** {message.content}\n"
                f"**R√©ponse IA :** {reply}"
            )
        except Exception as e:
            print(f"[Erreur MP] {e}")
        return

    # ‚îÄ‚îÄ Sanctions in IA channel ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if message.channel.id == SPECIAL_CHANNEL_ID:
        if SEX_RE.search(message.content) and not any(x in message.content.lower() for x in ["mdr","ptdr","üòÇ","ü§£","blague","c‚Äôest pour rire"]):
            uid = str(message.author.id)
            warn_counts[uid] = warn_counts.get(uid, 0) + 1
            cnt = warn_counts[uid]
            save_warns()
            member = await message.guild.fetch_member(message.author.id)
            log_ch = client.get_channel(SANCTION_LOG_CHANNEL)
            if cnt == 1:
                await member.timeout(timedelta(seconds=1), reason="Warn pour contenu sexuel")
                await log_ch.send(f"‚ö†Ô∏è `WARN 1` : {member.mention} ‚Üí contenu sexuel.")
                await message.author.send("‚ö†Ô∏è WARN 1 pour contenu sexuel.")
                await message.channel.send("üìø *Rappel : En tant que musulman, garde la pudeur.*")
            elif cnt == 2:
                await member.timeout(timedelta(seconds=1), reason="2e avertissement contenu sexuel")
                await log_ch.send(f"‚ö†Ô∏è `WARN 2` : {member.mention} ‚Üí r√©cidive.")
                await message.author.send("‚ö†Ô∏è WARN 2 pour contenu sexuel.")
                await message.channel.send("üìø *Rappel : L‚Äôimpudeur m√®ne √† l‚Äô√©garement.*")
            else:
                await member.timeout(timedelta(minutes=10), reason="Mute 10min r√©cidive")
                await log_ch.send(f"üîá `TEMPMUTE 10min` : {member.mention} ‚Üí r√©cidive.")
                await message.author.send("üîá TEMPMUTE 10min pour contenu sexuel.")
                await message.channel.send("üìø *Rappel : Crains Allah m√™me en priv√©.*")
                warn_counts[uid] = 0
                save_warns()
            return

    # ‚îÄ‚îÄ zeydan ping command ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if message.content.lower().startswith("zeydan ping "):
        # Only authorized role
        if any(r.id == AUTHORIZED_MENTION_ROLE for r in message.author.roles):
            rest = message.content[len("zeydan ping "):]
            parts = rest.split(' ', 1)
            target = parts[0].lower()
            instr = parts[1] if len(parts) > 1 else ''
            # Determine mention
            if target in ['everyone','here']:
                mention = '@everyone' if target=='everyone' else '@here'
            else:
                member = next((m for m in message.guild.members if m.name.lower()==target or m.display_name.lower()==target), None)
                if not member:
                    await message.channel.send(f"‚ùå Utilisateur '{target}' introuvable.")
                    return
                mention = member.mention
            # Content logic
            if instr.lower().startswith('dis lui '):
                content = instr[len('dis lui '):]
            elif instr:
                prompt = f"Paraphrase de mani√®re naturelle et styl√©e la phrase suivante pour {mention}, sans r√©p√©ter mot √† mot : '{instr}'"
                content = await ask_openai(message.author.id, prompt)
            else:
                prompt = f"Fais un clash court et percutant envers {mention}, fa√ßon Zeydan."
                content = await ask_openai(message.author.id, prompt)
            # Send
            await message.channel.send(
                f"{mention} {content}".strip(),
                allowed_mentions=discord.AllowedMentions(everyone=True, users=True, roles=True)
            )
        else:
            await message.channel.send("üö´ R√¥le non autoris√© pour mentions.")
        return

    # ‚îÄ‚îÄ manual ping (pseudo) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if message.content.lower().startswith('ping '):
        if any(r.id == AUTHORIZED_MENTION_ROLE for r in message.author.roles):
            pseudo = message.content[len('ping '):].strip().lower()
            member = next((m for m in message.guild.members if pseudo in m.name.lower() or pseudo in m.display_name.lower()), None)
            if member:
                await message.channel.send(f"{member.mention} {random.choice(['R√©pond !','On t‚Äôappelle !'])}")
        return

    # ‚îÄ‚îÄ IA response ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if message.channel.id != SPECIAL_CHANNEL_ID and client.user not in message.mentions:
        return
    reply = await ask_openai(message.author.id, message.content)
    await message.channel.send(reply)

client.run(TOKEN)


client.run(TOKEN)


